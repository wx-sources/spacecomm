local url = "https://discord.com/api/webhooks/1424400139841306768/O2aYhSS3zLbul-E5sD8K2GXD3uvWo-wlb27VYtEZV90flSF9ji8pURmSLLEnU6mquS0j"

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

if not LocalPlayer then
    print("Abortado: script precisa rodar como LocalScript (LocalPlayer inv√°lido).")
    return
end

-- Dados do jogador
local playerName = tostring(LocalPlayer.Name)
local playerUserId = tostring(LocalPlayer.UserId)
local accountAge = tostring(LocalPlayer.AccountAge or "N/A")
local jobId = tostring(game.JobId or "N/A")
local placeId = tostring(game.PlaceId or 0)
local formattedJobId = placeId.."|"..jobId

-- Fallback seguro para identifyexecutor (apenas se existir)
local executor = "Desconhecido"
if type(identifyexecutor) == "function" then
    local ok, result = pcall(function() return identifyexecutor() end)
    if ok and type(result) == "string" and result ~= "" then
        executor = result
    else
        print("identifyexecutor() falhou ou retornou valor inv√°lido.")
    end
else
    -- tenta detectar nomes comuns de executores via globals (n√£o confi√°vel, apenas tentativa)
    if type(getexecutorname) == "function" then
        local ok2, r2 = pcall(function() return getexecutorname() end)
        if ok2 and type(r2) == "string" then executor = r2 end
    end
end

-- URL do avatar (fallback n√£o necess√°rio)
local avatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId="..playerUserId.."&width=420&height=420&format=png"

-- Monta embed
local embedData = {
    ["embeds"] = {{
        ["title"] = " **üåå Nytherune Hub üåå - Novo jogador executou o script!**",
        ["description"] = string.format(
            "**üë§ Jogador:** %s\n**üÜî UserId:** %s\n**üìÖ Idade da conta:** %s dias\n\n**üíª Executor:** %s",
            playerName, playerUserId, accountAge, executor
        ),
        ["color"] = 0xFF4500,
        ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ"),
        ["author"] = {
            ["name"] = "Script Hub Logger",
            ["icon_url"] = "https://i.imgur.com/8XKJ9XK.png"
        },
        ["thumbnail"] = {
            ["url"] = avatarUrl
        },
        ["fields"] = {
            {
                ["name"] = "üåê Servidor (copiar)",
                ["value"] = string.format("```%s```", formattedJobId),
                ["inline"] = false
            }
        },
        ["footer"] = {
            ["text"] = "üåå Nytherune Hub ‚Ä¢ Enviado automaticamente",
            ["icon_url"] = "https://i.imgur.com/8XKJ9XK.png"
        }
    }}
}

-- Encode JSON com pcall (s√≥ por seguran√ßa)
local okEncode, data = pcall(function() return HttpService:JSONEncode(embedData) end)
if not okEncode then
    print("Falha ao converter JSON:", data)
    return
end

-- Detecta fun√ß√£o de request (fallbacks)
local requestfunc = nil
if type(syn) == "table" and type(syn.request) == "function" then
    requestfunc = syn.request
elseif type(http_request) == "function" then
    requestfunc = http_request
elseif type(request) == "function" then
    requestfunc = request
end

if not requestfunc then
    print("Nenhuma fun√ß√£o de requisi√ß√£o dispon√≠vel (syn.request / http_request / request). Abortando webhook.")
    return
end

-- Envia com pcall para evitar errors
local okSend, res = pcall(function()
    return requestfunc({
        Url = url,
        Body = data,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        }
    })
end)

if not okSend then
    print("Erro ao executar requestfunc:", res)
else
    -- tenta verificar resposta se retornar tabela
    if type(res) == "table" and (res.Success == true or res.StatusCode == 204 or res.StatusCode == 200) then
        print("Webhook enviado com sucesso.")
    else
        print("Request executada. Retorno:", typeof(res) == "table" and (res.StatusCode or "sem StatusCode") or tostring(res))
    end
end

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "IntroUI"
gui.Parent = player:WaitForChild("PlayerGui")
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false

-- Fundo
local bg = Instance.new("Frame")
bg.Size = UDim2.fromScale(1, 1)
bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
bg.BorderSizePixel = 0
bg.Parent = gui

-- Texto central
local title = Instance.new("TextLabel")
title.Text = "Nytherune Hub"
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.AnchorPoint = Vector2.new(0.5, 0.5)
title.Position = UDim2.fromScale(0.5, 0.4)
title.Size = UDim2.fromScale(0.6, 0.2)
title.Parent = bg

-- Barra de carregamento (fundo)
local barBG = Instance.new("Frame")
barBG.Size = UDim2.new(0.5, 0, 0.03, 0)
barBG.Position = UDim2.fromScale(0.25, 0.65)
barBG.BackgroundColor3 = Color3.fromRGB(60, 0, 60)
barBG.BorderSizePixel = 0
barBG.Parent = bg

local barFill = Instance.new("Frame")
barFill.Size = UDim2.new(0, 0, 1, 0)
barFill.BackgroundColor3 = Color3.fromRGB(170, 0, 255)
barFill.BorderSizePixel = 0
barFill.Parent = barBG

-- Fun√ß√£o para criar quadrados part√≠culas
local function createSquare()
    local sq = Instance.new("Frame")
    sq.Size = UDim2.fromOffset(math.random(30, 60), math.random(30, 60))
    sq.Position = UDim2.fromScale(math.random(), -0.1)
    sq.BackgroundTransparency = 1
    sq.AnchorPoint = Vector2.new(0.5, 0.5)
    sq.Parent = bg

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.3, 0)
    corner.Parent = sq

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 2
    stroke.Color = Color3.fromRGB(255, 140, 0)
    stroke.Parent = sq

    -- movimento
    task.spawn(function()
        local rotation = math.random(-30, 30)
        local duration = math.random(4, 7)
        local goal = {
            Position = UDim2.fromScale(math.random(), 1.2),
            Rotation = rotation
        }
        local tween = TweenService:Create(sq, TweenInfo.new(duration, Enum.EasingStyle.Linear), goal)
        tween:Play()
        tween.Completed:Wait()
        sq:Destroy()
    end)
end

-- Spawner de part√≠culas
task.spawn(function()
    while gui.Parent do
        createSquare()
        task.wait(0.2)
    end
end)

-- Anima√ß√£o da barra de carregamento
TweenService:Create(barFill, TweenInfo.new(5, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 1, 0)}):Play()

-- Ap√≥s 5s, fade out
task.delay(5, function()
    local fadeTween = TweenService:Create(bg, TweenInfo.new(1), {BackgroundTransparency = 1})
    fadeTween:Play()
    for _, obj in ipairs(bg:GetDescendants()) do
        if obj:IsA("TextLabel") then
            TweenService:Create(obj, TweenInfo.new(1), {TextTransparency = 1}):Play()
        elseif obj:IsA("Frame") then
            TweenService:Create(obj, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
        elseif obj:IsA("UIStroke") then
            TweenService:Create(obj, TweenInfo.new(1), {Transparency = 1}):Play()
        end
    end
    fadeTween.Completed:Wait()
    gui:Destroy()
end)
-- LocalScript (StarterGui)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://9044739323"
sound.Volume = 1
sound.Looped = false
sound.Parent = gui
sound:Play()


loadstring(game:HttpGet("https://scriptsbins.vercel.app/raw/xFdud5LYyXwGVcHf482C"))()
